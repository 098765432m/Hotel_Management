import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import styles from "@/styles/global.module.scss";
import { ConfigProvider } from "antd";

// Require for Mantine core

import { MantineProvider, ColorSchemeScript } from "@mantine/core";
import "@mantine/core/styles.css";

// Require for Mantine core

//import Redux

import ReduxProvider from "@/components/redux/ReduxProvider";

//import Redux

import Header from "@/components/header/Header";
import { AppRouterCacheProvider } from "@mui/material-nextjs/v13-appRouter";
import { cookies } from "next/headers";
import { UserCookieResponse } from "@/types/dto/user.dto";
import { decrypt, SessionPayload } from "@/lib/session";
import Footer from "@/components/footer/Footer";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookiesStore = cookies(); // Get Cookie on SSR

  const authCookie = await decrypt(cookiesStore.get("login")?.value as string); // Decrypt JWT
  const authInfo: UserCookieResponse = (authCookie as SessionPayload) ?? null; // Convert JWT payload to auth type

  return (
    <html lang="en">
      <head>
        <ColorSchemeScript></ColorSchemeScript>
      </head>
      <body className={inter.className}>
        <AppRouterCacheProvider>
          <ConfigProvider
            theme={{
              components: {
                Collapse: {
                  // headerBg: "#ffffff",
                  // contentBg: "#ffffff",
                },
              },
            }}
          >
            <ReduxProvider authInfo={authInfo}>
              <MantineProvider>
                {/* <AuthProvider authInfo={authInfo}> */}
                <header>
                  <Header></Header>
                </header>
                <main className="">
                  <div id={styles.body_container}>{children}</div>
                </main>
                <footer>
                  <Footer></Footer>
                </footer>
              </MantineProvider>
            </ReduxProvider>
            {/* </AuthProvider> */}
          </ConfigProvider>
        </AppRouterCacheProvider>
      </body>
    </html>
  );
}
